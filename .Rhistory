colnames(indec) = gsub('á', 'a',colnames(indec))
colnames(indec) = gsub('é', 'e',colnames(indec))
colnames(indec) = gsub('í', 'i',colnames(indec))
colnames(indec) = gsub('ó', 'o',colnames(indec))
colnames(indec) = gsub('ú', 'u',colnames(indec))
colnames(indec)[2] = 'Alimentos y bebidas'
colnames(indec)[5] = 'Vivienda Agua y Elec'
colnames(indec)[4] = 'Prendias y Calzado'
colnames(indec)[6] = 'Equip y Mant del Hogar'
variable = indec$Nivel_general
x = indec$Mes[1:12]
indec$month = month.abb[indec$Mes]
indec_total = read_excel('indecnacional_total.xlsx')
indec_total$year = year(indec_total$periodos)
indec_total$Mes = as.numeric(substr(indec_total$periodos, 6 , 7))
indec_total$periodos = as.Date(indec_total$periodos)
colnames(indec_total) = gsub(',', '',colnames(indec_total))
colnames(indec_total) = gsub('á', 'a',colnames(indec_total))
colnames(indec_total) = gsub('é', 'e',colnames(indec_total))
colnames(indec_total) = gsub('í', 'i',colnames(indec_total))
colnames(indec_total) = gsub('ó', 'o',colnames(indec_total))
colnames(indec_total) = gsub('ú', 'u',colnames(indec_total))
colnames(indec_total)[2] = 'Alimentos y bebidas'
variable_total = indec_total$Nivel_general
x = indec_total$Mes[1:12]
indec_total$month = month.abb[indec_total$Mes]
colnames(indec)
colnames(indec)[1:10]
colnames(indec)[1:13]
nombres = colnames(indec)[1:13]
indec[,nrow(indec)]
indec[,nrow(indec)]
indec[nrow(indec),]
indec[nrow(indec),]
nrow(indec)
a =indec[nrow(indec),]
View(a)
a = indec[nrow(indec),]$values
a
subset(indec, indec[nrow(indec),])
df_pie = indec[nrow(indec),]
df_pie
df_pie = indec[nrow(indec),]
df_pie
names(df_pie)
values(df_pie)
value(df_pie)
as.numeric(df_pie)
df_pie = indec[nrow(indec),]
pie_chart_follow = df %>% hchart('pie', hcaes(x = colnames(df_pie)[1:13], y = as.numeric(df_pie)[1:13], color = viridis::mako(n = length(colnames(df_pie)[1:13])))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
df_pie = indec[nrow(indec),]
pie_chart_follow = df_pie %>% hchart('pie', hcaes(x = colnames(df_pie)[1:13], y = as.numeric(df_pie)[1:13], color = viridis::mako(n = length(colnames(df_pie)[1:13])))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
colnames(df_pie)[1:13]
as.numeric(df_pie)[1:13]
pie_chart_follow = df_pie %>% hchart('pie', hcaes(x = colnames(df_pie)[1:13], y = as.numeric(df_pie)[1:13], color = viridis::mako(n = length(colnames(df_pie)[1:13])))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
x = colnames(df_pie)[1:13]
y = as.numeric(df_pie)[1:13]
x
y
View(indec)
as.numeric(df_pie)[1:13]
tail(df_pie, n = 1)
tail(df_pie, n = 0)
tail(df_pie, n = 1)
df_pie = indec[nrow(indec),]
x = colnames(df_pie)[1:13]
y = tail(df_pie, n = 1)
pie_chart_follow = df_pie %>% hchart('pie', hcaes(x = x, y = y, color = viridis::mako(n = length(colnames(df_pie)[1:13])))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
unique(x)
df_pie = indec[nrow(indec),]
x = colnames(df_pie)[1:13]
y = tail(df_pie, n = 1)
pie_chart_follow = df_pie %>% hchart('pie', hcaes(x = x, y = y, color = viridis::mako(n = length(unique(x))))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
y = as.numeric(tail(df_pie, n = 1))
df_pie = indec[nrow(indec),]
x = colnames(df_pie)[1:13]
y = as.numeric(tail(df_pie, n = 1))[1:13]
pie_chart_follow = df_pie %>% hchart('pie', hcaes(x = x, y = y, color = viridis::mako(n = length(unique(x))))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
df_pie = indec[nrow(indec),]
x = colnames(df_pie)[1:13]
y = as.numeric(tail(df_pie, n = 1))[1:13]
pie_chart_follow = df_pie %>% hchart('pie', hcaes(x = x, y = y, color = viridis::mako(n = length(unique(x))))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b> Total</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Levels',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>Contenido por Niveles</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = "Fuente: Study Portals",align = "right",verticalAlign = "bottom",
style = list(color = "black", fontSize = '15px'),
href = " https://studyportals.com/")
library(datasets)
library(flexdashboard)
library(plotly)
library(crosstalk)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tidymodels)
library(shiny)
library(dplyr)
library(lubridate)
library(readxl)
library(highcharter)
library(rlang)
library(broom)
library(writexl)
substr(today(),3,4)
file = paste0('https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_',substr(today(),6,7),'_',substr(today(),3,4), '.xls')
destfile = "indec_nacional.xls"
file
destfile = "indec_nacionals.xls"
download.file(file, destfile, mode = "wb")
today()
substr(today(),3,4)
substr(today(),6,7)
as.numeric(substr(today(),6,7))
if (as.numeric(substr(today(),6,7)) > 15){
file = paste0('https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_',substr(today(),6,7),'_',substr(today(),3,4), '.xls')
destfile = "indec_nacional.xls"
#download.file(file, destfile, mode = "wb")
indec = read_excel('indec_nacional.xls')
indec = indec[9:21,]
n_col = ncol(indec) - 1
periodos = seq(as.Date("2017/1/1"), by = "month", length.out = n_col)
indec = data.frame(t(indec))
colnames(indec) = c(indec[1,])
row.names(indec) = 1:nrow(indec)
indec = indec[-1,]
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2, trimws )
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2,
function(x) as.numeric(as.character(x)))
indec$periodos = periodos
#write_xlsx(indec, 'indecnacional.xlsx' )
######################################################
file_total = 'https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_aperturas.xls'
destfile_total = "indec_nacional_total.xls"
download.file(file_total, destfile_total, mode = "wb")
indec_total = read_excel('indec_nacional_total.xls')
indec_total = indec_total[8:52,]
n_col_total = ncol(indec_total) - 1
periodos_total = seq(as.Date("2017/1/1"), by = "month", length.out = n_col_total)
indec_total = data.frame(t(indec_total))
colnames(indec_total) = c(indec_total[1,])
row.names(indec_total) = 1:nrow(indec_total)
indec_total = indec_total[-1,]
indec_total[ , c(1:(ncol(indec_total)))] = apply(indec_total[ , c(1:(ncol(indec_total)))], 2, trimws )
indec_total[ , c(1:(ncol(indec_total)))] = apply(indec_total[ , c(1:(ncol(indec_total)))], 2,
function(x) as.numeric(as.character(x)))
indec_total$periodos = periodos_total
#write_xlsx(indec_total, 'indecnacional_total.xlsx' )
} else {
print( 15 - as.numeric(substr(today(),6,7)))
}
if (as.numeric(substr(today(),6,7)) > 15){
file = paste0('https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_',substr(today(),6,7),'_',substr(today(),3,4), '.xls')
destfile = "indec_nacional.xls"
download.file(file, destfile, mode = "wb")
indec = read_excel('indec_nacional.xls')
indec = indec[9:21,]
n_col = ncol(indec) - 1
periodos = seq(as.Date("2017/1/1"), by = "month", length.out = n_col)
indec = data.frame(t(indec))
colnames(indec) = c(indec[1,])
row.names(indec) = 1:nrow(indec)
indec = indec[-1,]
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2, trimws )
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2,
function(x) as.numeric(as.character(x)))
indec$periodos = periodos
write_xlsx(indec, 'indecnacional.xlsx' )
######################################################
file_total = 'https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_aperturas.xls'
destfile_total = "indec_nacional_total.xls"
download.file(file_total, destfile_total, mode = "wb")
indec_total = read_excel('indec_nacional_total.xls')
indec_total = indec_total[8:52,]
n_col_total = ncol(indec_total) - 1
periodos_total = seq(as.Date("2017/1/1"), by = "month", length.out = n_col_total)
indec_total = data.frame(t(indec_total))
colnames(indec_total) = c(indec_total[1,])
row.names(indec_total) = 1:nrow(indec_total)
indec_total = indec_total[-1,]
indec_total[ , c(1:(ncol(indec_total)))] = apply(indec_total[ , c(1:(ncol(indec_total)))], 2, trimws )
indec_total[ , c(1:(ncol(indec_total)))] = apply(indec_total[ , c(1:(ncol(indec_total)))], 2,
function(x) as.numeric(as.character(x)))
indec_total$periodos = periodos_total
write_xlsx(indec_total, 'indecnacional_total.xlsx' )
} else {
print('Faltan: ', 15 - as.numeric(substr(today(),6,7)), ' dias')
}
if (as.numeric(substr(today(),6,7)) > 15){
file = paste0('https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_',substr(today(),6,7),'_',substr(today(),3,4), '.xls')
destfile = "indec_nacional.xls"
download.file(file, destfile, mode = "wb")
indec = read_excel('indec_nacional.xls')
indec = indec[9:21,]
n_col = ncol(indec) - 1
periodos = seq(as.Date("2017/1/1"), by = "month", length.out = n_col)
indec = data.frame(t(indec))
colnames(indec) = c(indec[1,])
row.names(indec) = 1:nrow(indec)
indec = indec[-1,]
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2, trimws )
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2,
function(x) as.numeric(as.character(x)))
indec$periodos = periodos
write_xlsx(indec, 'indecnacional.xlsx' )
######################################################
file_total = 'https://www.indec.gob.ar/ftp/cuadros/economia/sh_ipc_aperturas.xls'
destfile_total = "indec_nacional_total.xls"
download.file(file_total, destfile_total, mode = "wb")
indec_total = read_excel('indec_nacional_total.xls')
indec_total = indec_total[8:52,]
n_col_total = ncol(indec_total) - 1
periodos_total = seq(as.Date("2017/1/1"), by = "month", length.out = n_col_total)
indec_total = data.frame(t(indec_total))
colnames(indec_total) = c(indec_total[1,])
row.names(indec_total) = 1:nrow(indec_total)
indec_total = indec_total[-1,]
indec_total[ , c(1:(ncol(indec_total)))] = apply(indec_total[ , c(1:(ncol(indec_total)))], 2, trimws )
indec_total[ , c(1:(ncol(indec_total)))] = apply(indec_total[ , c(1:(ncol(indec_total)))], 2,
function(x) as.numeric(as.character(x)))
indec_total$periodos = periodos_total
write_xlsx(indec_total, 'indecnacional_total.xlsx' )
} else {
cat('Faltan: ', 15 - as.numeric(substr(today(),6,7)), ' dias')
}
install.packages("DBI")
install.packages("RMySQL")
install.packages("DBI")
install.packages("DBI")
library(DBI)
library(RMySQL)
install.packages("DBI")
install.packages("RMySQL")
install.packages("DBI")
install.packages("DBI")
library(DBI)
library(RMySQL)
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname='centro_medicina_prepaga',
host='localhost',
port=3306,
user='root',
password='1411')
dbListTables(mysqlconnection)
query = 'CREATE SCHEMA IF NOT EXISTS centro_medicina_prepaga;'
dbGetQuery(mysqlconnection, query)
query = 'CREATE SCHEMA IF NOT EXISTS inflacion;'
dbGetQuery(mysqlconnection, query)
query = 'USE inflacion;'
dbGetQuery(mysqlconnection, query)
library(datasets)
library(flexdashboard)
library(plotly)
library(crosstalk)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tidymodels)
library(shiny)
library(dplyr)
library(lubridate)
library(readxl)
library(highcharter)
library(rlang)
library(broom)
library(writexl)
indec = read_excel('indec_nacional.xls')
indec = indec[9:21,]
n_col = ncol(indec) - 1
periodos = seq(as.Date("2017/1/1"), by = "month", length.out = n_col)
indec = data.frame(t(indec))
colnames(indec) = c(indec[1,])
row.names(indec) = 1:nrow(indec)
indec = indec[-1,]
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2, trimws )
indec[ , c(1:(ncol(indec)))] = apply(indec[ , c(1:(ncol(indec)))], 2,
function(x) as.numeric(as.character(x)))
indec$periodos = periodos
indec$year = year(indec$periodos)
indec$Mes = as.numeric(substr(indec$periodos, 6 , 7))
indec$periodos = as.Date(indec$periodos)
colnames(indec) = gsub(',', '',colnames(indec))
colnames(indec) = gsub('á', 'a',colnames(indec))
colnames(indec) = gsub('é', 'e',colnames(indec))
colnames(indec) = gsub('í', 'i',colnames(indec))
colnames(indec) = gsub('ó', 'o',colnames(indec))
colnames(indec) = gsub('ú', 'u',colnames(indec))
colnames(indec)[2] = 'Alimentos y bebidas'
colnames(indec)[5] = 'Vivienda Agua y Elec'
colnames(indec)[4] = 'Prendias y Calzado'
colnames(indec)[6] = 'Equip y Mant del Hogar'
indec$month = month.abb[indec$Mes]
colnames(indec)
query = '
CREATE TABLE IF NOT EXISTS inflacion_argentina (
nivel_general INT,
alimentos_bebidas INT,
bebidas_alchol:tabaco INT,
prendas_calzado INT,
vivienda_agua_ele INT,
equip_mant_hogar INT,
salud INT,
transporte INT,
comunicacion INT,
recreacion_cultura INT,
educacion INT,
restaurante_hoteles INT,
bienes_servicios INT,
periodos DATE,
year INT,
mes  INT,
month VARCHAR(50) ,
);'
dbGetQuery(mysqlconnection, query)
query = '
CREATE TABLE IF NOT EXISTS inflacion_argentina (
nivel_general INT,
alimentos_bebidas INT,
bebidas_alchol_tabaco INT,
prendas_calzado INT,
vivienda_agua_ele INT,
equip_mant_hogar INT,
salud INT,
transporte INT,
comunicacion INT,
recreacion_cultura INT,
educacion INT,
restaurante_hoteles INT,
bienes_servicios INT,
periodos DATE,
year INT,
mes  INT,
month VARCHAR(50) ,
);'
dbGetQuery(mysqlconnection, query)
query = '
CREATE TABLE IF NOT EXISTS inflacion_argentina (
nivel_general INT,
alimentos_bebidas INT,
bebidas_alchol_tabaco INT,
prendas_calzado INT,
vivienda_agua_ele INT,
equip_mant_hogar INT,
salud INT,
transporte INT,
comunicacion INT,
recreacion_cultura INT,
educacion INT,
restaurante_hoteles INT,
bienes_servicios INT,
periodos DATE,
year INT,
mes  INT,
month VARCHAR(50)
);'
dbGetQuery(mysqlconnection, query)
dat <- matrix(1:4, 2, 2)
dat
dat[1]
dd <- data.frame(Quarter = c("16/17 Q1", "16/17 Q2"), Vendors = c("a","b"))
colnames(indec)
paste0('indec$',colnames(indec))
paste0('indec$"',colnames(indec))
paste0('indec$',colnames(indec))
query_values <- "insert into inflacion_argentina (nivel_general,alimentos_bebidas, bebidas_alchol_tabaco, prendas_calzado, vivienda_agua_ele,
equip_mant_hogar, salud, transporte, comunicacion, recreacion_cultura, educacion, restaurante_hoteles, bienes_servicios,
periodos, year, mes, month) VALUES"
query_insert <- paste0(query_values, paste(sprintf("('%s', '%s','%s', '%s','%s', '%s','%s', '%s','%s', '%s'
,'%s', '%s','%s', '%s','%s', '%s','%s')", indec$`Nivel general`, indec$`Alimentos y bebidas`,
indec$`Bebidas alcoholicas y tabaco`, indec$`Prendias y Calzado`,
indec$`Vivienda Agua y Elec`,
indec$`Equip y Mant del Hogar` , indec$Salud, indec$Transporte,
indec$Comunicacion, indec$`Recreacion y cultura`, indec$Educacion,
indec$`Restaurantes y hoteles`, indec$`Bienes y servicios varios`,
indec$periodos, indec$year, indec$Mes, indec$month ), collapse = ","))
dbGetQuery(mysqlconnection, query_insert)
txt = read.table('Keys.txt', header = FALSE, sep = "", dec = ".")
txt = read.table('Keys.txt')
txt = read.delim('Keys.txt', header = FALSE, sep = "", dec = ".")
txt = read.delim('Keys.txt')
library(datasets)
library(flexdashboard)
library(plotly)
library(crosstalk)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tidymodels)
library(shiny)
library(dplyr)
library(lubridate)
library(readxl)
library(highcharter)
library(rlang)
library(broom)
library(writexl)
library(readr)
txt = read_tsv('Keys.txt')
View(txt)
txt = read_tsv('Keys.txt', headers = FALSE)
txt = read_tsv('Keys.txt', col_names =  FALSE)
View(txt)
txt[1,]
View(txt)
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname = 'centro_medicina_prepaga',
host = txt[1,],
port = txt[2,],
user = txt[3,],
password = txt[4,])
txt[4,]
txt[3,]
as_string(txt[3,])
str(txt[3,])
txt[3,]
str(txt[3,1])
txt[3,1]
txt[3]
txt$X1[1]
txt$X1[2]
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname = 'centro_medicina_prepaga',
host = as.numeric(txt$X1[1]),
port = txt$X1[2],
user = txt$X1[3],
password = as.numeric(txt$X1[4]))
txt$X1[3]
txt$X1[2]
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname = 'centro_medicina_prepaga',
host = as.numeric(txt$X1[1]),
port = as.numeric(txt$X1[2]),
user = txt$X1[3],
password = as.numeric(txt$X1[4]))
as.numeric(txt$X1[4])
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname = 'centro_medicina_prepaga',
host = as.numeric(txt$X1[1]),
port = as.numeric(txt$X1[2]),
user = txt$X1[3],
password = txt$X1[4])
txt$X1[1]
txt$X1[2]
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname = 'centro_medicina_prepaga',
host = txt$X1[1],
port = txt$X1[2],
user = txt$X1[3],
password = txt$X1[4])
mysqlconnection = dbConnect(RMySQL::MySQL(),
dbname = 'centro_medicina_prepaga',
host = txt$X1[1],
port = as.numeric(txt$X1[2]),
user = txt$X1[3],
password = txt$X1[4])
